# Builder stage
FROM python:3.9-slim AS builder
WORKDIR /app
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir gunicorn

# Runner stage
FROM python:3.9-alpine
RUN apk add --no-cache curl

# Create user and directory structure first
RUN adduser -D nonroot && \
    mkdir -p /app/tmp /app/data && \
    chown -R nonroot:nonroot /app

WORKDIR /app

# Copy files with correct ownership first
COPY --from=builder --chown=nonroot:nonroot /opt/venv /opt/venv
COPY --chown=nonroot:nonroot . .

# Set permissions (simplified)
RUN find /app -type d -exec chmod 755 {} \; && \
    find /app -type f -exec chmod 644 {} \; && \
    chmod +x /app/entrypoint.sh

USER nonroot

# Environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    ENVIRONMENT=production \
    PORT=10000 \
    MAX_FILE_SIZE=10 \
    RATE_LIMIT=5 \
    WORKERS=2 \
    TIMEOUT=120 \
    READ_ONLY_FS=true

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

EXPOSE $PORT
ENTRYPOINT ["/app/entrypoint.sh"]